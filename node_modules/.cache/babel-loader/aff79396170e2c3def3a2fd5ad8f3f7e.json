{"ast":null,"code":"'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});/*\r\n * Tell the browser that the event listener won't prevent a scroll.\r\n * Allowing the browser to continue scrolling without having to\r\n * to wait for the listener to return.\r\n */var addPassiveEventListener=exports.addPassiveEventListener=function addPassiveEventListener(target,eventName,listener){var supportsPassiveOption=function(){var supportsPassiveOption=false;try{var opts=Object.defineProperty({},'passive',{get:function get(){supportsPassiveOption=true;}});window.addEventListener('test',null,opts);}catch(e){}return supportsPassiveOption;}();target.addEventListener(eventName,listener,supportsPassiveOption?{passive:true}:false);};var removePassiveEventListener=exports.removePassiveEventListener=function removePassiveEventListener(target,eventName,listener){target.removeEventListener(eventName,listener);};","map":{"version":3,"sources":["/Users/Aaron/Desktop/personal-website/src/node_modules/react-scroll/modules/mixins/passive-event-listeners.js"],"names":["Object","defineProperty","exports","value","addPassiveEventListener","target","eventName","listener","supportsPassiveOption","opts","get","window","addEventListener","e","passive","removePassiveEventListener","removeEventListener"],"mappings":"AAAA,aAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CC,KAAK,CAAE,IADoC,CAA7C,EAGA;AACA;AACA;AACA;AACA,GACA,GAAIC,CAAAA,uBAAuB,CAAGF,OAAO,CAACE,uBAAR,CAAkC,QAASA,CAAAA,uBAAT,CAAiCC,MAAjC,CAAyCC,SAAzC,CAAoDC,QAApD,CAA8D,CAC5H,GAAIC,CAAAA,qBAAqB,CAAG,UAAY,CACtC,GAAIA,CAAAA,qBAAqB,CAAG,KAA5B,CACA,GAAI,CACF,GAAIC,CAAAA,IAAI,CAAGT,MAAM,CAACC,cAAP,CAAsB,EAAtB,CAA0B,SAA1B,CAAqC,CAC9CS,GAAG,CAAE,QAASA,CAAAA,GAAT,EAAe,CAClBF,qBAAqB,CAAG,IAAxB,CACD,CAH6C,CAArC,CAAX,CAKAG,MAAM,CAACC,gBAAP,CAAwB,MAAxB,CAAgC,IAAhC,CAAsCH,IAAtC,EACD,CAAC,MAAOI,CAAP,CAAU,CAAE,CACd,MAAOL,CAAAA,qBAAP,CACD,CAX2B,EAA5B,CAYAH,MAAM,CAACO,gBAAP,CAAwBN,SAAxB,CAAmCC,QAAnC,CAA6CC,qBAAqB,CAAG,CAAEM,OAAO,CAAE,IAAX,CAAH,CAAuB,KAAzF,EACD,CAdD,CAgBA,GAAIC,CAAAA,0BAA0B,CAAGb,OAAO,CAACa,0BAAR,CAAqC,QAASA,CAAAA,0BAAT,CAAoCV,MAApC,CAA4CC,SAA5C,CAAuDC,QAAvD,CAAiE,CACrIF,MAAM,CAACW,mBAAP,CAA2BV,SAA3B,CAAsCC,QAAtC,EACD,CAFD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\r\n * Tell the browser that the event listener won't prevent a scroll.\r\n * Allowing the browser to continue scrolling without having to\r\n * to wait for the listener to return.\r\n */\nvar addPassiveEventListener = exports.addPassiveEventListener = function addPassiveEventListener(target, eventName, listener) {\n  var supportsPassiveOption = function () {\n    var supportsPassiveOption = false;\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function get() {\n          supportsPassiveOption = true;\n        }\n      });\n      window.addEventListener('test', null, opts);\n    } catch (e) {}\n    return supportsPassiveOption;\n  }();\n  target.addEventListener(eventName, listener, supportsPassiveOption ? { passive: true } : false);\n};\n\nvar removePassiveEventListener = exports.removePassiveEventListener = function removePassiveEventListener(target, eventName, listener) {\n  target.removeEventListener(eventName, listener);\n};"]},"metadata":{},"sourceType":"module"}